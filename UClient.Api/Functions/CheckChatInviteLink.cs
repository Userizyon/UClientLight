using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace UClient
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class UApi
    {
        /// <summary>
        /// Checks the validity of an invite link for a chat and returns information about the corresponding chat
        /// </summary>
        public class CheckChatInviteLink : Function<ChatInviteLinkInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "checkChatInviteLink";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }
            
/// <summary>
/// Invite link to be checked; must have URL "t.me", "telegram.me", or "telegram.dog" and query beginning with "/joinchat/" or "/+"
/// </summary>
[JsonConverter(typeof(Converter))]
[JsonProperty("invite_link")]
public string InviteLink { get; set; }


        }

        /// <summary>
        /// Checks the validity of an invite link for a chat and returns information about the corresponding chat
        /// </summary>
        public static Task<ChatInviteLinkInfo> CheckChatInviteLinkAsync(
            this Client client, string inviteLink = default)
        {
            return client.ExecuteAsync(new CheckChatInviteLink
            {
                InviteLink = inviteLink
            });
        }
    }
}
